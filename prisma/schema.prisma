// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

model User {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    email     String   @unique
    admin     Boolean  @default(false)
    spreads   Spread[]
    uploads   Media[]
    Card      Card[]
}

model Spread {
    id          Int        @id @default(autoincrement())
    createdAt   DateTime   @default(now())
    userId      Int
    user        User       @relation(fields: [userId], references: [id])
    name        String
    date        DateTime   @default(now())
    description String?
    notes       String?
    template    Boolean    @default(false)
    positions   Position[]
    media       Media[]

    @@index([userId, template])
}

model Position {
    id          Int     @id @default(autoincrement())
    spreadId    Int
    spread      Spread  @relation(fields: [spreadId], references: [id], onDelete: Cascade)
    name        String
    description String?
    card        Card?   @relation(fields: [cardId], references: [id])
    cardId      Int?
    suit        String?
    notes       String?
}

model Media {
    createdAt DateTime @default(now())
    path      String   @id
    type      String
    width     Int?
    height    Int?
    spreadId  Int?
    spead     Spread?  @relation(fields: [spreadId], references: [id], onDelete: SetNull)
    userId    Int?
    user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)

    @@index([spreadId])
}

model Card {
    id         Int             @id @default(autoincrement())
    name       String
    suit       String?
    references CardReference[]
    positions  Position[]
    userId     Int
    user       User            @relation(fields: [userId], references: [id])

    @@index([suit])
}

model CardReference {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    cardId    Int
    card      Card     @relation(fields: [cardId], references: [id])
    text      String
    source    String?
    reversed  Boolean  @default(false)

    @@index([cardId, reversed])
}

// TODO: Add deck models to support differently named cards

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}
