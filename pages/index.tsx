import Head from 'next/head';
import Image from 'next/image';
import { Inter } from '@next/font/google';
import styles from 'styles/Home.module.css';
import { HTMLProps, PropsWithChildren, ReactHTMLElement } from 'react';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
	return (
		<>
			<Head>
				<title>Tarot Aide</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className={styles.main}>
				<div className={styles.description}>
					<p>Stuff to do:</p>
					<ul>
						<ListItem checked disabled>
							Figure out base functionality
						</ListItem>
						<ListItem>Pick a damn front end library</ListItem>
						<ListItem>Lay out pages w/ mock data</ListItem>
						<ListItem>Figure out storage</ListItem>
						<ListItem>Upload stuff</ListItem>
						<ListItem>Wire 'er up</ListItem>
						<ListItem>Docker deployment</ListItem>
					</ul>
					<p>Ideas:</p>
					<ul>
						<li>Upload cards of deck</li>
						<li>Store text w/ references</li>
						<li>Landing page is fast jump to card</li>
						<li>
							Card has picture of chosen deck w/ available text
						</li>
						<li>Tagging system</li>
						<li>Make site super responsive, mobile first even</li>
						<li>Inspo: Numenera character app</li>
						<li>
							UI should feel <em>ethereal</em>
						</li>
						<li>Swap between decks</li>
						<li>Make UI change color throughout day?</li>
						<li>
							See about using filter animations, make images turn
							to mist or some shit
						</li>
						<li>
							<em>Detect corners?</em>
						</li>
					</ul>
				</div>
			</main>
		</>
	);
}

function ListItem({
	children,
	...inputProps
}: PropsWithChildren<HTMLProps<HTMLInputElement>>) {
	const id = (children?.toString() ?? 'no-id')
		.toLowerCase()
		.replaceAll(/[^a-z0-9]+/g, '-');
	return (
		<li>
			<input
				type="checkbox"
				name={id}
				id={id}
				value="1"
				{...inputProps}
			/>
			&nbsp;
			<label htmlFor={id}>{children}</label>
		</li>
	);
}
